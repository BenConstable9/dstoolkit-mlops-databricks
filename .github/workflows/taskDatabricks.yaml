name: taskDatabricks 
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      UPDATE_FOLDER:
        required: true
        type: string
      RELEASE_CD:
        required: true
        type: boolean
    secrets:
      ARM_TENANT_ID:
        required: true
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      PAT_GITHUB:
        required: true


# Were we can define the inputs that our action will accept

jobs:
  build:
    name: ${{ inputs.ENVIRONMENT }} Environment Deployment
    runs-on: ubuntu-latest
    environment:  ${{ inputs.ENVIRONMENT }}


    steps:      
      - name:                     Checkout
        uses:                     actions/checkout@v2


###################################################################################################################################################################//
##                                                                      Git File Changes Check                                               
###################################################################################################################################################################//
      - name:                     Check Infra Git Path Change
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsGitFileChanges.sh
        env:
            PATH_FILTER:                      '.github/MLOps_Engineer/Infrastructure'
            VAR_NAME:                          enableInfraDeploy


###################################################################################################################################################################//
##                                                                      Set Python                                          
###################################################################################################################################################################//

# 9.  Set Up Python
      - name:                     Setup Python
        uses:                     actions/setup-python@v4
        with:
          python-version:         '3.8'
    
###################################################################################################################################################################//
##                                                                      Dependencies/ Install                                              
###################################################################################################################################################################//
      - shell: bash
        name:  Tests and Dependency Install
        run: |
          echo $enableInfraDeploy
          sudo apt update && sudo apt install jq
          # Do a python pip install so that modules can be found from python tasks
          python -m pip install requests
          pip3 install  azure-databricks-sdk-python


###################################################################################################################################################################//
##                                                                      Authenticate/Login To Azure                                               
###################################################################################################################################################################//
      - name:                     Service Principal Login
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsAzureLogin.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}
          ARM_CLIENT_ID:          ${{ secrets.ARM_CLIENT_ID }}    
          ARM_CLIENT_SECRET:      ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:          ${{ secrets.ARM_TENANT_ID }}



###################################################################################################################################################################//
##                                                                      Deploy Azure Infrastructure in BICEP                                               
###################################################################################################################################################################//

      - name:                     Deploy DBX CICD Azure Resources
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateAzureResources.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}



###################################################################################################################################################################//
##                                                                      Save Dynamically Generated Env Variable                                               
###################################################################################################################################################################//

# 6.  __Order Important__ Save env variable
      - name:                     Set Env Variables 
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsSetEnvVariables.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}


###################################################################################################################################################################//
##                                                                      Create Databricks Custom Role                                              
###################################################################################################################################################################//

# 6.  __Order Important__ Save env variable
      - name:                     Create Databricks Custom Role 
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateDatabricksCustomRole.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}


###################################################################################################################################################################//
##                                                                      Generate AAD Tokens                                              
###################################################################################################################################################################//

# 6.  __Order Important__ Save env variable
      - name:                     Generate AAD Tokens
        run:                      python .github/MLOps_Engineer/Utilities/Python/utilsCreateAuthenticationTokens.py
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}
          ARM_CLIENT_ID:          ${{ secrets.ARM_CLIENT_ID }}    
          ARM_CLIENT_SECRET:      ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:          ${{ secrets.ARM_TENANT_ID }}


###################################################################################################################################################################//
##                                                                      RBAC Assignments                                           
###################################################################################################################################################################//
# 6.  __Order Important__ Asign RBAC Permission
      - name:                     Assign RBAC Permissions 
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateRoleBasedAccess.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}



###################################################################################################################################################################//
##                                                                      PAT Token                                           
###################################################################################################################################################################//
# 10.  PAT Token --> Key Vault
      - name:                     Create And Store PAT Token In Key Vault
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateDatabricksToken.sh




###################################################################################################################################################################//
##                                                                      Secret Scopes                                           
###################################################################################################################################################################//
# 11.  Secret Scopes
      - name:                 Save Databricks SP Credentials Within Secret Scopes
        run:                  bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateSecretScopes.sh
        env:
          ARM_CLIENT_ID:      ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:      ${{ secrets.ARM_TENANT_ID }}


###################################################################################################################################################################//
##                                                                      Create Cluster                                           
###################################################################################################################################################################//
# 12. Databricks Clusters
      - name:                 Create Databricks Clusters
        run:                  python .github/MLOps_Engineer/Utilities/Python/utilsCreateCluster.py



###################################################################################################################################################################//
##                                                                      Create Repos                                           
###################################################################################################################################################################//
# 14. 
      - name:                 Create Databricks Repos
        run:                  bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateRepoFolder.sh
        env:
          ARM_CLIENT_ID:      ${{ secrets.ARM_CLIENT_ID }} 



###################################################################################################################################################################//
##                                                                      Git Config                                           
###################################################################################################################################################################//
# 13.   
      - name:                 Git Config
        run:                  python .github/MLOps_Engineer/Utilities/Python/utilsGitConfiguration.py
        env:
          PAT_GITHUB:         ${{ secrets.PAT_GITHUB }}



###################################################################################################################################################################//
##                                                                      Configure CLI                                           
###################################################################################################################################################################//
# 15. Databricks CLI Config
      - name:                   Install + Configure Databricks CLI
        run:                    bash .github/MLOps_Engineer/Utilities/Bash/utilsDatabricksCLIConfig.sh


###################################################################################################################################################################//
##                                                                      DBX Deploy Jobs/ Workflows                                            
###################################################################################################################################################################//
      - shell: bash
        name:  DBX Deploy - Workflow Artifacts (CD)
        if: ${{ inputs.RELEASE_CD}} 
        run: |
          echo $DATABRICKS_TOKEN
          pip install dbx
          dbx configure --enable-inplace-jinja-support
          dbx deploy --deployment-file conf/deployment.yaml FEATURE_ENGINEERING -e $ENVIRONMENT --jinja-variables-file=conf/jobConfigs/jobConfigs.yaml
          dbx deploy --deployment-file conf/deployment.yaml MODEL_TRAINING -e $ENVIRONMENT --jinja-variables-file=conf/jobConfigs/jobConfigs.yaml
          dbx deploy --deployment-file conf/deployment.yaml MODEL_INFERENCE -e $ENVIRONMENT --jinja-variables-file=conf/jobConfigs/jobConfigs.yaml


###################################################################################################################################################################//
##                                                                      Repo Pull                                           
###################################################################################################################################################################//
# 15. Databricks CLI Config
      - name:                   Repo Pull
        if:                     ${{ inputs.RELEASE_CD}} 
        run:                    bash .github/MLOps_Engineer/Utilities/Bash/utilsRepoPull.sh
        env:
          UPDATE_FOLDER:        ${{ inputs.UPDATE_FOLDER}}   


















###################################################################################################################################################################//
##                                                                      Create Jobs  
## Deprecated: Use for reference purposes only                                          
###################################################################################################################################################################//
# 13.   Create Databricks Jobs (Linked To Git Repo)
#      - name:                 Create Databricks Jobs
#        run:                  python .github/MLOps_Engineer/Utilities/Python/utilsCreateJob.py

###################################################################################################################################################################//
##                                                                      Create Wheel Files & Upload
## Deprecated: Use for reference purposes only                                          
###################################################################################################################################################################//
# 16. Databricks Wheel File Creation + DBFS/Cluster Upload
      #- name:                   Create Wheel Files & Upload To DBFS
      #  run:                    bash .github/MLOps_Engineer/Utilities/Bash/utilsWheelUpload.sh