name: taskDatabricks 
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true


# Were we can define the inputs that our action will accept

jobs:
  build:
    name: ${{ inputs.ENVIRONMENT }} Environment Deployment
    runs-on: ubuntu-latest
    environment:  ${{ inputs.ENVIRONMENT }}


    steps:      
      - name:                     Checkout
        uses:                     actions/checkout@v2


###################################################################################################################################################################//
##                                                                      Git File Changes Check                                               
###################################################################################################################################################################//
      - name:                     Check Infra Git Path Change
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsGitFileChanges.sh
        env:
            PATH_FILTER:                      '.github/MLOps_Engineer/Infrastructure'
            VAR_NAME:                          enableInfraDeploy


###################################################################################################################################################################//
##                                                                      Set Python                                          
###################################################################################################################################################################//

# 9.  Set Up Python
      - name:                     Setup Python
        uses:                     actions/setup-python@v4
        with:
          python-version:         '3.8'
    
###################################################################################################################################################################//
##                                                                      Dependencies/ Install                                              
###################################################################################################################################################################//
      - shell: bash
        name:  Tests and Dependency Install
        run: |
          echo $enableInfraDeploy
          az upgrade
          sudo apt update && sudo apt install jq
          #pip3 install requests
          python -m pip install requests
          pip3 install  azure-databricks-sdk-python
        env:
          Test1:                  ${{ inputs.ENVIRONMENT }}
          Test3:                  ${{ secrets.AZURE_CREDENTIALS }}



###################################################################################################################################################################//
##                                                                      Authenticate/Login To Azure                                               
###################################################################################################################################################################//
      - name:                     Service Principal Login
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsAzureLogin.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}
          ARM_CLIENT_ID:          ${{ secrets.ARM_CLIENT_ID }}    
          ARM_CLIENT_SECRET:      ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:          ${{ secrets.ARM_TENANT_ID }}



###################################################################################################################################################################//
##                                                                      Deploy Azure Infrastructure in BICEP                                               
###################################################################################################################################################################//

      #- name:                     Deploy DBX CICD Azure Resources
      #  run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateAzureResources.sh
      #  env:
      #    ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}



###################################################################################################################################################################//
##                                                                      Save Dynamically Generated Env Variable                                               
###################################################################################################################################################################//

# 6.  __Order Important__ Save env variable
      - name:                     Set Env Variables 
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsSetEnvVariables.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}




###################################################################################################################################################################//
##                                                                      Generate AAD Tokens                                              
###################################################################################################################################################################//

# 6.  __Order Important__ Save env variable
      - name:                     Generate AAD Tokens
        run:                      python .github/MLOps_Engineer/Utilities/Python/utilsCreateAuthenticationTokens.py
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}
          ARM_CLIENT_ID:          ${{ secrets.ARM_CLIENT_ID }}    
          ARM_CLIENT_SECRET:      ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:          ${{ secrets.ARM_TENANT_ID }}

      - shell: bash
        name:  Tests
        run: |
          echo $DBRKS_BEARER_TOKEN
          echo $DBRKS_MANAGEMENT_TOKEN
        env:
          DBRKS_BEARER_TOKEN: $DBRKS_BEARER_TOKEN
          DBRKS_MANAGEMENT_TOKEN: $DBRKS_MANAGEMENT_TOKEN




###################################################################################################################################################################//
##                                                                      RBAC Assignments                                           
###################################################################################################################################################################//
# 6.  __Order Important__ Asign RBAC Permission
      - name:                     Assign RBAC Permissions 
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateRoleBasedAccess.sh
        env:
          ENVIRONMENT:            ${{ inputs.ENVIRONMENT }}






###################################################################################################################################################################//
##                                                                      PAT Token                                           
###################################################################################################################################################################//
# 10.  PAT Token --> Key Vault
      - name:                     Create And Store PAT Token In Key Vault
        run:                      bash .github/MLOps_Engineer/Utilities/Bash/utilsCreateDatabricksToken.sh




###################################################################################################################################################################//
##                                                                      Secret Scopes                                           
###################################################################################################################################################################//
# 11.  Secret Scopes
      - name:                 Save Databricks SP Credentials Within Secret Scopes
        run:                  bash ./.github/workflows/Utilities/Utils-Create-Scope.sh
        env:
          ARM_CLIENT_ID:      ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID:      ${{ secrets.ARM_TENANT_ID }}


# 12. Databricks Clusters
      - name:                 Create Databricks Clusters
        run:                  bash ./.github/workflows/Utilities/Utils-Create-Cluster.sh
        env:
          environment:        ${{ matrix.environments }}


# 13.   Create Databricks Jobs (Linked To Git Repo)
      - name:                 Create Databricks Jobs
        run:                  bash ./.github/workflows/Utilities/Utils-Create-Job.sh
        env:
          environment:        ${{ matrix.environments }}


# 14. Databricks Git Config
      - name:                 Create Databricks Repos
        run:                  bash ./.github/workflows/Utilities/Utils-Create-Repo-Folders.sh
        env:
          environment:        ${{ matrix.environments }}
          PAT_GITHUB:         ${{ secrets.PAT_GITHUB }}
          ARM_CLIENT_ID:      ${{ secrets.ARM_CLIENT_ID }}


# 15. Databricks CLI Config
      - name:                   Install + Configure Databricks CLI
        run:                    bash ./.github/workflows/Utilities/Utils-DBX-CLI-Configure.sh


# 16. Databricks Wheel File Creation + DBFS/Cluster Upload
      - name:                   Create Wheel Files & Upload To DBFS
        run:                    bash ./.github/workflows/Utilities/Utils-Create-Wheels-DBFS-Cluster-Upload.sh
        env:
          environment:          ${{ matrix.environments }}



